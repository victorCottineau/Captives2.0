// Algorithmic Neural Network Architecture
// Version 1.0
// (c) Jean-Claude Heudin 2015
function random_change(){for(var n=1;24>=n;n++)random_next=random_numbers[n]-random_numbers[n+31],0>random_next&&(random_next+=1),random_numbers[n]=random_next;for(var n=25;55>=n;n++)random_next=random_numbers[n]-random_numbers[n-24],0>random_next&&(random_next+=1),random_numbers[n]=random_next}function random_init(n){random_seed=0==n||null==n?.43981240537:n,random_numbers[0]=random_seed,random_numbers[55]=random_seed,random_next=1e-9,random_last=random_seed;for(var r=1;54>=r;r++){var a=21*r%55;random_numbers[a]=random_next,random_next=random_last-random_next,0>random_next&&(random_next+=1),random_last=random_numbers[a]}random_change(),random_change(),random_change(),random_current=0}function random_real(){return random_current+=1,random_current>55&&(random_current=0,random_change()),random_numbers[random_current]}function random_integer(n,r){var a=0;return n>=r?a=n:(a=Math.floor(random_real()*(r-n+1)+n),a>r&&(a=r)),a}var random_numbers=[],random_next,random_last,random_seed,random_current;random_init();